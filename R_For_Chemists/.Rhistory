alpha = 0.6, size = 2, force = 12
) +
scale_x_continuous(breaks = seq(-100,200,1), limits = c(0, max(female_data$enrichment_score)*1.2), name = "sample frequency / background frequency (enrichment)") +
scale_y_continuous(limits = c(-0.01, max(female_data$p_value)*1.2), name = "p-value") +
theme_classic()
## Male up
text <- readLines("/Volumes/Luke_Lab_1/hemp/Hemp_genomics_2020/_GO_terms/hemp_male_up_DEGs.txt.terms")
indices <- grep("TERM", text)
parsed <- data.frame(
term = gsub("TERM\\t", "", text[indices]),
p_value = as.numeric(gsub("CORRECTED P-VALUE\\t", "", text[indices+1])),
terms_in_list = as.numeric(gsub(" .*$", "", gsub(".*\\t", "", text[indices+5]))),
list_size = 468,
terms_in_genome = as.numeric(gsub(".*vs ", "", gsub(" of 33677 in the genome", "", text[indices+5]))),
genome_size = 33677
)
head(parsed)
parsed$enrichment_score <- (parsed$terms_in_list / parsed$list_size) / (parsed$terms_in_genome / parsed$genome_size)
parsed %>%
filter(p_value < 0.05) %>%
dim()
parsed %>%
filter(p_value < 0.05) %>%
filter(terms_in_list > 15)
parsed %>%
filter(p_value < 0.0000000005) %>%
filter(terms_in_list > 9) -> male_data
male_plot <- ggplot(male_data) +
geom_point(aes(x = enrichment_score, y = p_value), shape = 21, fill = "#377eb8", color = "black") +
geom_label_repel(
aes(x = enrichment_score, y = p_value, label = term),
max.overlaps = 100, xlim = c(0,32), ylim = c(-3e-10, 3e-10),
alpha = 0.6, size = 2, force = 16
) +
scale_x_continuous(breaks = seq(-100,200,1), limits = c(0, max(male_data$enrichment_score)*1.2), name = "sample frequency / background frequency (enrichment)") +
scale_y_continuous(limits = c(-0.0000000001, max(male_data$p_value)*1.2), name = "p-value") +
theme_classic()
## Merge plots
image_size <- 0.5
png(file = paste(cann_fig_dir, "GO_Terms", ".png", sep = ""), type = "cairo", units = "in", width = 24*image_size, height = 16*image_size, pointsize = 1, res = 1200)
cowplot::plot_grid(female_plot, male_plot, ncol = 1, labels = "AUTO", align = "v", axis = "l")
dev.off()
text <- readLines("/Volumes/Luke_Lab_1/hemp/Hemp_genomics_2020/_GO_terms/hemp_female_up_DEGs.txt.terms")
indices <- grep("TERM", text)
parsed <- data.frame(
term = gsub("TERM\\t", "", text[indices]),
p_value = as.numeric(gsub("CORRECTED P-VALUE\\t", "", text[indices+1])),
terms_in_list = as.numeric(gsub(" .*$", "", gsub(".*\\t", "", text[indices+5]))),
list_size = 468,
terms_in_genome = as.numeric(gsub(".*vs ", "", gsub(" of 33677 in the genome", "", text[indices+5]))),
genome_size = 33677
)
head(parsed)
parsed$enrichment_score <- (parsed$terms_in_list / parsed$list_size) / (parsed$terms_in_genome / parsed$genome_size)
parsed %>%
filter(p_value < 0.05) %>%
dim()
parsed %>%
filter(p_value < 0.05) %>%
filter(terms_in_list > 15)
parsed %>%
filter(p_value < 0.05) %>%
filter(terms_in_list > 5) -> female_data
female_plot <- ggplot(female_data) +
geom_point(aes(x = enrichment_score, y = p_value), shape = 21, fill = "#e41a1c", color = "black") +
geom_label_repel(
aes(x = enrichment_score, y = p_value, label = term),
max.overlaps = 100, xlim = c(0,15), ylim = c(-0.01, 0.06),
alpha = 0.6, size = 2, force = 12, nudge_y = 0.001
) +
scale_x_continuous(breaks = seq(-100,200,1), limits = c(0, max(female_data$enrichment_score)*1.2), name = "sample frequency / background frequency (enrichment)") +
scale_y_continuous(limits = c(-0.01, max(female_data$p_value)*1.2), name = "p-value") +
theme_classic()
## Male up
text <- readLines("/Volumes/Luke_Lab_1/hemp/Hemp_genomics_2020/_GO_terms/hemp_male_up_DEGs.txt.terms")
indices <- grep("TERM", text)
parsed <- data.frame(
term = gsub("TERM\\t", "", text[indices]),
p_value = as.numeric(gsub("CORRECTED P-VALUE\\t", "", text[indices+1])),
terms_in_list = as.numeric(gsub(" .*$", "", gsub(".*\\t", "", text[indices+5]))),
list_size = 468,
terms_in_genome = as.numeric(gsub(".*vs ", "", gsub(" of 33677 in the genome", "", text[indices+5]))),
genome_size = 33677
)
head(parsed)
parsed$enrichment_score <- (parsed$terms_in_list / parsed$list_size) / (parsed$terms_in_genome / parsed$genome_size)
parsed %>%
filter(p_value < 0.05) %>%
dim()
parsed %>%
filter(p_value < 0.05) %>%
filter(terms_in_list > 15)
parsed %>%
filter(p_value < 0.0000000005) %>%
filter(terms_in_list > 9) -> male_data
male_plot <- ggplot(male_data) +
geom_point(aes(x = enrichment_score, y = p_value), shape = 21, fill = "#377eb8", color = "black") +
geom_label_repel(
aes(x = enrichment_score, y = p_value, label = term),
max.overlaps = 100, xlim = c(0,32), ylim = c(-3e-10, 3e-10),
alpha = 0.6, size = 2, force = 16, nudge_y = 1e-11
) +
scale_x_continuous(breaks = seq(-100,200,1), limits = c(0, max(male_data$enrichment_score)*1.2), name = "sample frequency / background frequency (enrichment)") +
scale_y_continuous(limits = c(-0.0000000001, max(male_data$p_value)*1.2), name = "p-value") +
theme_classic()
## Merge plots
image_size <- 0.5
png(file = paste(cann_fig_dir, "GO_Terms", ".png", sep = ""), type = "cairo", units = "in", width = 24*image_size, height = 16*image_size, pointsize = 1, res = 1200)
cowplot::plot_grid(female_plot, male_plot, ncol = 1, labels = "AUTO", align = "v", axis = "l")
dev.off()
text <- readLines("/Volumes/Luke_Lab_1/hemp/Hemp_genomics_2020/_GO_terms/hemp_female_up_DEGs.txt.terms")
indices <- grep("TERM", text)
parsed <- data.frame(
term = gsub("TERM\\t", "", text[indices]),
p_value = as.numeric(gsub("CORRECTED P-VALUE\\t", "", text[indices+1])),
terms_in_list = as.numeric(gsub(" .*$", "", gsub(".*\\t", "", text[indices+5]))),
list_size = 468,
terms_in_genome = as.numeric(gsub(".*vs ", "", gsub(" of 33677 in the genome", "", text[indices+5]))),
genome_size = 33677
)
head(parsed)
parsed$enrichment_score <- (parsed$terms_in_list / parsed$list_size) / (parsed$terms_in_genome / parsed$genome_size)
parsed %>%
filter(p_value < 0.05) %>%
dim()
parsed %>%
filter(p_value < 0.05) %>%
filter(terms_in_list > 15)
parsed %>%
filter(p_value < 0.05) %>%
filter(terms_in_list > 5) -> female_data
female_plot <- ggplot(female_data) +
geom_point(aes(x = enrichment_score, y = p_value), shape = 21, fill = "#e41a1c", color = "black") +
geom_label_repel(
aes(x = enrichment_score, y = p_value, label = term),
max.overlaps = 100, xlim = c(0,15), ylim = c(-0.01, 0.06),
alpha = 0.6, size = 2, force = 20, nudge_y = 0.001
) +
scale_x_continuous(breaks = seq(-100,200,1), limits = c(0, max(female_data$enrichment_score)*1.2), name = "sample frequency / background frequency (enrichment)") +
scale_y_continuous(limits = c(-0.01, max(female_data$p_value)*1.2), name = "p-value") +
theme_classic()
## Male up
text <- readLines("/Volumes/Luke_Lab_1/hemp/Hemp_genomics_2020/_GO_terms/hemp_male_up_DEGs.txt.terms")
indices <- grep("TERM", text)
parsed <- data.frame(
term = gsub("TERM\\t", "", text[indices]),
p_value = as.numeric(gsub("CORRECTED P-VALUE\\t", "", text[indices+1])),
terms_in_list = as.numeric(gsub(" .*$", "", gsub(".*\\t", "", text[indices+5]))),
list_size = 468,
terms_in_genome = as.numeric(gsub(".*vs ", "", gsub(" of 33677 in the genome", "", text[indices+5]))),
genome_size = 33677
)
head(parsed)
parsed$enrichment_score <- (parsed$terms_in_list / parsed$list_size) / (parsed$terms_in_genome / parsed$genome_size)
parsed %>%
filter(p_value < 0.05) %>%
dim()
parsed %>%
filter(p_value < 0.05) %>%
filter(terms_in_list > 15)
parsed %>%
filter(p_value < 0.0000000005) %>%
filter(terms_in_list > 9) -> male_data
male_plot <- ggplot(male_data) +
geom_point(aes(x = enrichment_score, y = p_value), shape = 21, fill = "#377eb8", color = "black") +
geom_label_repel(
aes(x = enrichment_score, y = p_value, label = term),
max.overlaps = 100, xlim = c(0,32), ylim = c(-3e-10, 3e-10),
alpha = 0.6, size = 2, force = 20, nudge_y = 1e-11
) +
scale_x_continuous(breaks = seq(-100,200,1), limits = c(0, max(male_data$enrichment_score)*1.2), name = "sample frequency / background frequency (enrichment)") +
scale_y_continuous(limits = c(-0.0000000001, max(male_data$p_value)*1.2), name = "p-value") +
theme_classic()
## Merge plots
image_size <- 0.5
png(file = paste(cann_fig_dir, "GO_Terms", ".png", sep = ""), type = "cairo", units = "in", width = 24*image_size, height = 16*image_size, pointsize = 1, res = 1200)
cowplot::plot_grid(female_plot, male_plot, ncol = 1, labels = "AUTO", align = "v", axis = "l")
dev.off()
text <- readLines("/Volumes/Luke_Lab_1/hemp/Hemp_genomics_2020/_GO_terms/hemp_female_up_DEGs.txt.terms")
indices <- grep("TERM", text)
parsed <- data.frame(
term = gsub("TERM\\t", "", text[indices]),
p_value = as.numeric(gsub("CORRECTED P-VALUE\\t", "", text[indices+1])),
terms_in_list = as.numeric(gsub(" .*$", "", gsub(".*\\t", "", text[indices+5]))),
list_size = 468,
terms_in_genome = as.numeric(gsub(".*vs ", "", gsub(" of 33677 in the genome", "", text[indices+5]))),
genome_size = 33677
)
head(parsed)
parsed$enrichment_score <- (parsed$terms_in_list / parsed$list_size) / (parsed$terms_in_genome / parsed$genome_size)
parsed %>%
filter(p_value < 0.05) %>%
dim()
parsed %>%
filter(p_value < 0.05) %>%
filter(terms_in_list > 15)
parsed %>%
filter(p_value < 0.05) %>%
filter(terms_in_list > 5) -> female_data
female_plot <- ggplot(female_data) +
geom_point(aes(x = enrichment_score, y = p_value), shape = 21, fill = "#e41a1c", color = "black") +
geom_label_repel(
aes(x = enrichment_score, y = p_value, label = term),
max.overlaps = 100, xlim = c(0,15), ylim = c(-0.01, 0.06),
alpha = 0.6, size = 2, force = 30, nudge_y = 0.001
) +
scale_x_continuous(breaks = seq(-100,200,1), limits = c(0, max(female_data$enrichment_score)*1.2), name = "sample frequency / background frequency (enrichment)") +
scale_y_continuous(limits = c(-0.01, max(female_data$p_value)*1.2), name = "p-value") +
theme_classic()
## Male up
text <- readLines("/Volumes/Luke_Lab_1/hemp/Hemp_genomics_2020/_GO_terms/hemp_male_up_DEGs.txt.terms")
indices <- grep("TERM", text)
parsed <- data.frame(
term = gsub("TERM\\t", "", text[indices]),
p_value = as.numeric(gsub("CORRECTED P-VALUE\\t", "", text[indices+1])),
terms_in_list = as.numeric(gsub(" .*$", "", gsub(".*\\t", "", text[indices+5]))),
list_size = 468,
terms_in_genome = as.numeric(gsub(".*vs ", "", gsub(" of 33677 in the genome", "", text[indices+5]))),
genome_size = 33677
)
head(parsed)
parsed$enrichment_score <- (parsed$terms_in_list / parsed$list_size) / (parsed$terms_in_genome / parsed$genome_size)
parsed %>%
filter(p_value < 0.05) %>%
dim()
parsed %>%
filter(p_value < 0.05) %>%
filter(terms_in_list > 15)
parsed %>%
filter(p_value < 0.0000000005) %>%
filter(terms_in_list > 9) -> male_data
male_plot <- ggplot(male_data) +
geom_point(aes(x = enrichment_score, y = p_value), shape = 21, fill = "#377eb8", color = "black") +
geom_label_repel(
aes(x = enrichment_score, y = p_value, label = term),
max.overlaps = 100, xlim = c(0,32), ylim = c(-3e-10, 3e-10),
alpha = 0.6, size = 2, force = 30, nudge_y = 1e-11
) +
scale_x_continuous(breaks = seq(-100,200,1), limits = c(0, max(male_data$enrichment_score)*1.2), name = "sample frequency / background frequency (enrichment)") +
scale_y_continuous(limits = c(-0.0000000001, max(male_data$p_value)*1.2), name = "p-value") +
theme_classic()
## Merge plots
image_size <- 0.5
png(file = paste(cann_fig_dir, "GO_Terms", ".png", sep = ""), type = "cairo", units = "in", width = 24*image_size, height = 16*image_size, pointsize = 1, res = 1200)
cowplot::plot_grid(female_plot, male_plot, ncol = 1, labels = "AUTO", align = "v", axis = "l")
dev.off()
text <- readLines("/Volumes/Luke_Lab_1/hemp/Hemp_genomics_2020/_GO_terms/hemp_female_up_DEGs.txt.terms")
indices <- grep("TERM", text)
parsed <- data.frame(
term = gsub("TERM\\t", "", text[indices]),
p_value = as.numeric(gsub("CORRECTED P-VALUE\\t", "", text[indices+1])),
terms_in_list = as.numeric(gsub(" .*$", "", gsub(".*\\t", "", text[indices+5]))),
list_size = 468,
terms_in_genome = as.numeric(gsub(".*vs ", "", gsub(" of 33677 in the genome", "", text[indices+5]))),
genome_size = 33677
)
head(parsed)
parsed$enrichment_score <- (parsed$terms_in_list / parsed$list_size) / (parsed$terms_in_genome / parsed$genome_size)
parsed %>%
filter(p_value < 0.05) %>%
dim()
parsed %>%
filter(p_value < 0.05) %>%
filter(terms_in_list > 15)
parsed %>%
filter(p_value < 0.05) %>%
filter(terms_in_list > 5) -> female_data
female_plot <- ggplot(female_data) +
geom_point(aes(x = enrichment_score, y = p_value), shape = 21, fill = "#e41a1c", color = "black") +
geom_label_repel(
aes(x = enrichment_score, y = p_value, label = term),
max.overlaps = 100, xlim = c(0,15), ylim = c(-0.01, 0.06),
alpha = 0.6, size = 2, force = 40, nudge_y = 0.001
) +
scale_x_continuous(breaks = seq(-100,200,1), limits = c(0, max(female_data$enrichment_score)*1.2), name = "sample frequency / background frequency (enrichment)") +
scale_y_continuous(limits = c(-0.01, max(female_data$p_value)*1.2), name = "p-value") +
theme_classic()
## Male up
text <- readLines("/Volumes/Luke_Lab_1/hemp/Hemp_genomics_2020/_GO_terms/hemp_male_up_DEGs.txt.terms")
indices <- grep("TERM", text)
parsed <- data.frame(
term = gsub("TERM\\t", "", text[indices]),
p_value = as.numeric(gsub("CORRECTED P-VALUE\\t", "", text[indices+1])),
terms_in_list = as.numeric(gsub(" .*$", "", gsub(".*\\t", "", text[indices+5]))),
list_size = 468,
terms_in_genome = as.numeric(gsub(".*vs ", "", gsub(" of 33677 in the genome", "", text[indices+5]))),
genome_size = 33677
)
head(parsed)
parsed$enrichment_score <- (parsed$terms_in_list / parsed$list_size) / (parsed$terms_in_genome / parsed$genome_size)
parsed %>%
filter(p_value < 0.05) %>%
dim()
parsed %>%
filter(p_value < 0.05) %>%
filter(terms_in_list > 15)
parsed %>%
filter(p_value < 0.0000000005) %>%
filter(terms_in_list > 9) -> male_data
male_plot <- ggplot(male_data) +
geom_point(aes(x = enrichment_score, y = p_value), shape = 21, fill = "#377eb8", color = "black") +
geom_label_repel(
aes(x = enrichment_score, y = p_value, label = term),
max.overlaps = 100, xlim = c(0,32), ylim = c(-3e-10, 3e-10),
alpha = 0.6, size = 2, force = 40, nudge_y = 1e-11
) +
scale_x_continuous(breaks = seq(-100,200,1), limits = c(0, max(male_data$enrichment_score)*1.2), name = "sample frequency / background frequency (enrichment)") +
scale_y_continuous(limits = c(-0.0000000001, max(male_data$p_value)*1.2), name = "p-value") +
theme_classic()
## Merge plots
image_size <- 0.5
png(file = paste(cann_fig_dir, "GO_Terms", ".png", sep = ""), type = "cairo", units = "in", width = 24*image_size, height = 16*image_size, pointsize = 1, res = 1200)
cowplot::plot_grid(female_plot, male_plot, ncol = 1, labels = "AUTO", align = "v", axis = "l")
dev.off()
female_data
female_data$term
install.packages("ggwordcloud")
library(ggwordcloud)
?strsplit
strsplit(female_data$term, " ")
unlist(strsplit(female_data$term, " "))
table(unlist(strsplit(female_data$term, " ")))
unlist(strsplit(female_data$term, " "))
nchar(unlist(strsplit(female_data$term, " ")))
nchar(unlist(strsplit(female_data$term, " "))) > 2
words <- unlist(strsplit(female_data$term, " "))
words <- words[nchar(words) > 2]
table(words)
table(words)
as.data.frame(table(words))
library(ggwordcloud)
words <- unlist(strsplit(female_data$term, " "))
words <- words[nchar(words) > 2]
words <- as.data.frame(table(words))
ggplot(love_words_small, aes(label = words, size = Freq)) +
geom_text_wordcloud() +
scale_size_area(max_size = 40) +
theme_minimal()
library(ggwordcloud)
words <- unlist(strsplit(female_data$term, " "))
words <- words[nchar(words) > 2]
words <- as.data.frame(table(words))
ggplot(words, aes(label = words, size = Freq)) +
geom_text_wordcloud() +
scale_size_area(max_size = 40) +
theme_minimal()
ggplot(words, aes(label = words, size = Freq)) +
geom_text_wordcloud() +
scale_size_area(max_size = 10) +
theme_minimal()
ggplot(words, aes(label = words, size = Freq)) +
geom_text_wordcloud() +
scale_size_area(max_size = 10) +
theme_minimal()
ggplot(words, aes(label = words, size = Freq)) +
geom_text_wordcloud() +
scale_size_area(max_size = 10) +
theme_minimal()
ggplot(words, aes(label = words, size = Freq)) +
geom_text_wordcloud() +
scale_size_area(max_size = 10) +
theme_minimal()
words
order(words$Freq)
order(words$Freq, decreasing = TRUE)
words <- unlist(strsplit(female_data$term, " "))
words <- words[nchar(words) > 2]
words <- as.data.frame(table(words))
words <- words[order(words$Freq, decreasing = TRUE),]
ggplot(words, aes(label = words, size = Freq)) +
geom_text_wordcloud() +
scale_size_area(max_size = 10) +
theme_minimal()
library(ggwordcloud)
words <- unlist(strsplit(male_data$term, " "))
words <- words[nchar(words) > 2]
words <- as.data.frame(table(words))
words <- words[order(words$Freq, decreasing = TRUE),]
male_cloud <- ggplot(words, aes(label = words, size = Freq)) +
geom_text_wordcloud() +
scale_size_area(max_size = 10) +
theme_minimal()
text <- readLines("/Volumes/Luke_Lab_1/hemp/Hemp_genomics_2020/_GO_terms/hemp_male_up_DEGs.txt.terms")
indices <- grep("TERM", text)
parsed <- data.frame(
term = gsub("TERM\\t", "", text[indices]),
p_value = as.numeric(gsub("CORRECTED P-VALUE\\t", "", text[indices+1])),
terms_in_list = as.numeric(gsub(" .*$", "", gsub(".*\\t", "", text[indices+5]))),
list_size = 468,
terms_in_genome = as.numeric(gsub(".*vs ", "", gsub(" of 33677 in the genome", "", text[indices+5]))),
genome_size = 33677
)
head(parsed)
parsed$enrichment_score <- (parsed$terms_in_list / parsed$list_size) / (parsed$terms_in_genome / parsed$genome_size)
parsed %>%
filter(p_value < 0.05) %>%
dim()
parsed %>%
filter(p_value < 0.05) %>%
filter(terms_in_list > 15)
parsed %>%
filter(p_value < 0.0000000005) %>%
filter(terms_in_list > 9) -> male_data
male_plot <- ggplot(male_data) +
geom_point(aes(x = enrichment_score, y = p_value), shape = 21, fill = "#377eb8", color = "black") +
geom_label_repel(
aes(x = enrichment_score, y = p_value, label = term),
max.overlaps = 100, xlim = c(0,32), ylim = c(-3e-10, 3e-10),
alpha = 0.6, size = 2, force = 40, nudge_y = 1e-11
) +
scale_x_continuous(breaks = seq(-100,200,1), limits = c(0, max(male_data$enrichment_score)*1.2), name = "sample frequency / background frequency (enrichment)") +
scale_y_continuous(limits = c(-0.0000000001, max(male_data$p_value)*1.2), name = "p-value") +
theme_classic()
## Female word cloud
library(ggwordcloud)
words <- unlist(strsplit(male_data$term, " "))
words <- words[nchar(words) > 2]
words <- as.data.frame(table(words))
words <- words[order(words$Freq, decreasing = TRUE),]
male_cloud <- ggplot(words, aes(label = words, size = Freq)) +
geom_text_wordcloud() +
scale_size_area(max_size = 10) +
theme_minimal()
male_cloud
words
library(ggwordcloud)
words <- unlist(strsplit(female_data$term, " "))
words <- words[nchar(words) > 2]
words <- as.data.frame(table(words))
words <- words[order(words$Freq, decreasing = TRUE),]
female_cloud <- ggplot(words, aes(label = words, size = Freq)) +
geom_text_wordcloud() +
scale_size_area(max_size = 10) +
theme_minimal()
female_cloud
female_cloud
male_cloud
png(file = paste(cann_fig_dir, "GO_Terms_female", ".png", sep = ""), type = "cairo", units = "in", width = 6*image_size, height = 2*image_size, pointsize = 1, res = 1200)
female_cloud
dev.off()
png(file = paste(cann_fig_dir, "GO_Terms_male", ".png", sep = ""), type = "cairo", units = "in", width = 6*image_size, height = 2*image_size, pointsize = 1, res = 1200)
male_cloud
dev.off()
png(file = paste(cann_fig_dir, "GO_Terms_female", ".png", sep = ""), type = "cairo", units = "in", width = 16*image_size, height = 12*image_size, pointsize = 1, res = 1200)
female_cloud
dev.off()
png(file = paste(cann_fig_dir, "GO_Terms_male", ".png", sep = ""), type = "cairo", units = "in", width = 16*image_size, height = 12*image_size, pointsize = 1, res = 1200)
male_cloud
dev.off()
library(ggwordcloud)
words <- unlist(strsplit(female_data$term, " "))
words <- words[nchar(words) > 2]
words <- as.data.frame(table(words))
words <- words[order(words$Freq, decreasing = TRUE),]
female_cloud <- ggplot(words, aes(label = words, size = Freq)) +
geom_text_wordcloud() +
scale_size_area(max_size = 10) +
theme_minimal()
library(ggwordcloud)
words <- unlist(strsplit(male_data$term, " "))
words <- words[nchar(words) > 2]
words <- as.data.frame(table(words))
words <- words[order(words$Freq, decreasing = TRUE),]
male_cloud <- ggplot(words, aes(label = words, size = Freq)) +
geom_text_wordcloud() +
scale_size_area(max_size = 10) +
theme_minimal()
png(file = paste(cann_fig_dir, "GO_Terms_female", ".png", sep = ""), type = "cairo", units = "in", width = 16*image_size, height = 6*image_size, pointsize = 1, res = 1200)
female_cloud
dev.off()
png(file = paste(cann_fig_dir, "GO_Terms_male", ".png", sep = ""), type = "cairo", units = "in", width = 16*image_size, height = 6*image_size, pointsize = 1, res = 1200)
male_cloud
dev.off()
library(ggwordcloud)
words <- unlist(strsplit(female_data$term, " "))
words <- words[nchar(words) > 2]
words <- as.data.frame(table(words))
words <- words[order(words$Freq, decreasing = TRUE),]
words <- words[words$words != "process"]
library(ggwordcloud)
words <- unlist(strsplit(female_data$term, " "))
words <- words[nchar(words) > 2]
words <- as.data.frame(table(words))
words <- words[order(words$Freq, decreasing = TRUE),]
words <- words[words$words != "process",]
dim(words)
library(ggwordcloud)
words <- unlist(strsplit(female_data$term, " "))
words <- words[nchar(words) > 2]
words <- as.data.frame(table(words))
words <- words[order(words$Freq, decreasing = TRUE),]
words <- words[words$words != "process",]
female_cloud <- ggplot(words[1:60,], aes(label = words, size = Freq)) +
geom_text_wordcloud() +
scale_size_area(max_size = 10) +
theme_minimal()
library(ggwordcloud)
words <- unlist(strsplit(male_data$term, " "))
words <- words[nchar(words) > 2]
words <- as.data.frame(table(words))
words <- words[order(words$Freq, decreasing = TRUE),]
words <- words[words$words != "process",]
male_cloud <- ggplot(words[1:60,], aes(label = words, size = Freq)) +
geom_text_wordcloud() +
scale_size_area(max_size = 10) +
theme_minimal()
png(file = paste(cann_fig_dir, "GO_Terms_female", ".png", sep = ""), type = "cairo", units = "in", width = 16*image_size, height = 6*image_size, pointsize = 1, res = 1200)
female_cloud
dev.off()
png(file = paste(cann_fig_dir, "GO_Terms_male", ".png", sep = ""), type = "cairo", units = "in", width = 16*image_size, height = 6*image_size, pointsize = 1, res = 1200)
male_cloud
dev.off()
